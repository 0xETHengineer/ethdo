name: Go

on:
  push:
    branches: [ master ]
    # tags:
    #  - 'v*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build
      run: go build -v .

    - name: Test
      run: go test -v .

    - name: Set env
      run: |
       echo '::set-env name=GO111MODULE::on'

    - name: Fetch xgo
      run: go get github.com/suburbandad/xgo

    - name: Cross-compile
      run: xgo -v -x --targets="linux/amd64,linux/arm64,windows/amd64" github.com/wealdtech/ethdo

    - name: Create windows zip file
      run: |
       mv ethdo-windows-4.0-amd64.exe ethdo.exe
       zip --junk-paths ethdo-windows-exe.zip ethdo.exe

    - name: Create linux AMD64 tgz file
      run: |
       mv ethdo-linux-amd64 ethdo
       tar zcf ethdo-linux-amd64.tar.gz ethdo

    - name: Create linux ARM64 tgz file
      run: |
       mv ethdo-linux-arm64 ethdo
       tar zcf ethdo-linux-arm64.tar.gz ethdo

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: true
       
    - name: Upload windows zip file
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ethdo-windows-exe.zip
        asset_name: ethdo-windows-exe.zip
        asset_content_type: application/zip
       
    - name: Upload linux AMD64 tgz file
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ethdo-linux-amd64.tar.gz
        asset_name: ethdo-linux-amd64.tar.gz
        asset_content_type: application/gzip
       
    - name: Upload linux ARM64 tgz file
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ethdo-linux-arm64.tar.gz
        asset_name: ethdo-linux-arm64.tar.gz
        asset_content_type: application/gzip
